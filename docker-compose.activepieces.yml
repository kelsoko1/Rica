version: '3.8'

services:
  # Activepieces (Automation Platform)
  activepieces:
    image: activepieces/activepieces:latest
    container_name: activepieces
    restart: always
    ports:
      - "2020:80"
    environment:
      - AP_ENGINE_EXECUTABLE_PATH=dist/packages/engine/main.js
      - AP_API_KEY=${AP_API_KEY:-changeme_in_production}
      - AP_ENCRYPTION_KEY=${AP_ENCRYPTION_KEY:-changeme_in_production}
      - AP_JWT_SECRET=${AP_JWT_SECRET:-changeme_in_production}
      - AP_ENVIRONMENT=prod
      - AP_FRONTEND_URL=http://localhost:2020
      - AP_WEBHOOK_TIMEOUT_SECONDS=30
      - AP_TRIGGER_DEFAULT_POLL_INTERVAL=5
      - AP_POSTGRES_DATABASE=activepieces
      - AP_POSTGRES_HOST=activepieces-postgres
      - AP_POSTGRES_PORT=5432
      - AP_POSTGRES_USERNAME=activepieces
      - AP_POSTGRES_PASSWORD=${AP_POSTGRES_PASSWORD:-activepieces}
      - AP_REDIS_HOST=activepieces-redis
      - AP_REDIS_PORT=6379
      - AP_REDIS_PASSWORD=${REDIS_PASSWORD:-ChangeMeInProduction123!}
      - AP_SANDBOX_RUN_TIME_SECONDS=600
      - AP_TELEMETRY_ENABLED=false
    depends_on:
      activepieces-postgres:
        condition: service_healthy
      activepieces-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:80/api/v1/flags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    volumes:
      - activepieces_data:/root/.activepieces
    networks:
      - rica-network

  # PostgreSQL for Activepieces
  activepieces-postgres:
    image: postgres:15-alpine
    container_name: activepieces-postgres
    restart: always
    environment:
      POSTGRES_USER: activepieces
      POSTGRES_PASSWORD: ${AP_POSTGRES_PASSWORD:-activepieces}
      POSTGRES_DB: activepieces
    volumes:
      - activepieces_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U activepieces"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - rica-network

  # Redis for Activepieces
  activepieces-redis:
    image: redis:7-alpine
    container_name: activepieces-redis
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD:-ChangeMeInProduction123!}
    volumes:
      - activepieces_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - rica-network

volumes:
  activepieces_data:
  activepieces_postgres_data:
  activepieces_redis_data:

networks:
  rica-network:
    external: true
    name: rica-network
