apiVersion: v1
kind: Namespace
metadata:
  name: rica-tenant-${TENANT_ID}
  labels:
    app: rica
    tenant-id: ${TENANT_ID}
    user-email: ${USER_EMAIL}
    created-at: ${CREATED_AT}
    tier: ${SUBSCRIPTION_TIER}
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: tenant-quota
  namespace: rica-tenant-${TENANT_ID}
spec:
  hard:
    # Compute resources based on subscription tier
    requests.cpu: ${CPU_REQUEST}
    requests.memory: ${MEMORY_REQUEST}
    limits.cpu: ${CPU_LIMIT}
    limits.memory: ${MEMORY_LIMIT}
    # Storage
    requests.storage: ${STORAGE_REQUEST}
    persistentvolumeclaims: "10"
    # Object counts
    pods: "20"
    services: "10"
    configmaps: "20"
    secrets: "20"
---
apiVersion: v1
kind: LimitRange
metadata:
  name: tenant-limits
  namespace: rica-tenant-${TENANT_ID}
spec:
  limits:
  - max:
      cpu: ${POD_CPU_MAX}
      memory: ${POD_MEMORY_MAX}
    min:
      cpu: "50m"
      memory: "64Mi"
    default:
      cpu: ${POD_CPU_DEFAULT}
      memory: ${POD_MEMORY_DEFAULT}
    defaultRequest:
      cpu: "100m"
      memory: "128Mi"
    type: Container
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: tenant-isolation
  namespace: rica-tenant-${TENANT_ID}
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
  # Allow ingress from same namespace
  - from:
    - podSelector: {}
  egress:
  # Allow DNS
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: UDP
      port: 53
  # Allow egress to same namespace
  - to:
    - podSelector: {}
  # Allow egress to internet (can be restricted based on tier)
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tenant-service-account
  namespace: rica-tenant-${TENANT_ID}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tenant-role
  namespace: rica-tenant-${TENANT_ID}
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log", "services", "configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tenant-role-binding
  namespace: rica-tenant-${TENANT_ID}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tenant-role
subjects:
- kind: ServiceAccount
  name: tenant-service-account
  namespace: rica-tenant-${TENANT_ID}
