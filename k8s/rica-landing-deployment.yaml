apiVersion: apps/v1
kind: Deployment
metadata:
  name: rica-landing
  namespace: rica
  labels:
    app: rica-landing
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rica-landing
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: rica-landing
    spec:
      containers:
      - name: rica-landing
        image: ${REGISTRY:-localhost:5000}/rica-landing:${TAG:-latest}
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "100m"
            memory: "128Mi"
        env:
        - name: NODE_ENV
          value: "production"
        - name: REACT_APP_API_URL
          value: "/api"
        - name: REACT_APP_CLICKPESA_API_KEY
          valueFrom:
            secretKeyRef:
              name: rica-secrets
              key: clickpesa-api-key
              optional: true
        - name: REACT_APP_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: rica-secrets
              key: encryption-key
        - name: REACT_APP_ANALYTICS_KEY
          valueFrom:
            secretKeyRef:
              name: rica-secrets
              key: analytics-key
              optional: true
        - name: REACT_APP_SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: rica-secrets
              key: sentry-dsn
              optional: true
        livenessProbe:
          httpGet:
            path: /health.json
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health.json
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
      securityContext:
        fsGroup: 1001
---
apiVersion: v1
kind: Service
metadata:
  name: rica-landing
  namespace: rica
  labels:
    app: rica-landing
spec:
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: rica-landing
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rica-landing-ingress
  namespace: rica
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "120"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - landing.rica.example.com
    secretName: rica-landing-tls
  rules:
  - host: landing.rica.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rica-landing
            port:
              number: 80
