version: '3.8'

services:
  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: rica-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certs:/etc/nginx/certs
      - ./nginx/ssl-dhparams.pem:/etc/nginx/ssl-dhparams.pem
    depends_on:
      - rica-ui
      - rica-landing
      - rica-api
      - opencti
      - openbas
      - ollama
    networks:
      - rica-network

  # Rica Landing Page
  rica-landing:
    build:
      context: ./rica-landing
      dockerfile: Dockerfile
    container_name: rica-landing
    restart: always
    environment:
      - NODE_ENV=production
      - VITE_API_URL=${LANDING_API_URL:-http://localhost:3001}
    volumes:
      - ./rica-landing/public:/usr/share/nginx/html:ro
    networks:
      - rica-network

  # Rica API Service
  rica-api:
    build: 
      context: ./rica-api
      dockerfile: Dockerfile
    container_name: rica-api
    restart: always
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - OLLAMA_URL=http://ollama:11434
      - API_KEY=${API_KEY:-changeme_in_production}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY:-}
    depends_on:
      - ollama
    networks:
      - rica-network

  # Rica UI
  rica-ui:
    build: 
      context: ./rica-ui
      dockerfile: Dockerfile
    container_name: rica-ui
    restart: always
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:3001
    depends_on:
      - rica-api
    networks:
      - rica-network

  # OpenCTI
  opencti:
    image: opencti/worker:5.12.12
    container_name: opencti
    restart: always
    ports:
      - "4000:4000"
      - "8080:8080"
    environment:
      - NODE_OPTIONS=--max_old_space_size=8192
      - APP__PORT=4000
      - APP__ADMIN__EMAIL=admin@opencti.io
      - APP__ADMIN__PASSWORD=ChangeMeInProduction123!
      - APP__ADMIN__TOKEN=ChangeMeInProduction123!
      - REDIS__HOSTNAME=redis
      - ELASTICSEARCH__URL=http://elasticsearch:9200
      - MINIO__ENDPOINT=minio
      - MINIO__PORT=9000
      - MINIO__USE_SSL=false
      - MINIO__ACCESS_KEY=minio
      - MINIO__SECRET_KEY=miniokey
      - RABBITMQ__HOSTNAME=rabbitmq
      - RABBITMQ__PORT=5672
      - RABBITMQ__PORT_MANAGEMENT=15672
      - RABBITMQ__MANAGEMENT_SSL=false
      - RABBITMQ__USERNAME=guest
      - RABBITMQ__PASSWORD=guest
    depends_on:
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      minio:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:4000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - rica-network

  # OpenBAS
  openbas:
    image: openbas/backend:latest
    container_name: openbas
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NODE_OPTIONS=--max_old_space_size=4096
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=miniokey
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_USE_SSL=false
      - REDIS_HOST=redis
      - DATABASE_URL=postgresql://openbas:openbas@postgres:5432/openbas?schema=public
      - JWT_SECRET=ChangeMeInProduction123!
      - CRON_TIMEZONE=UTC
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_started
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - rica-network

  # Ollama (for DeepSeek)
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: always
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - rica-network

  # Code Server (VS Code in browser)
  code-server:
    image: codercom/code-server:latest
    container_name: code-server
    restart: always
    ports:
      - "8080:8080"
    environment:
      - PASSWORD=ChangeMeInProduction123!
      - SUDO_PASSWORD=ChangeMeInProduction123!
      - DEFAULT_WORKSPACE=/home/coder/project
    volumes:
      - code_data:/home/coder
    networks:
      - rica-network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    command: redis-server --requirepass ChangeMeInProduction123!
    volumes:
      - redis_data:/data
    networks:
      - rica-network

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    container_name: elasticsearch
    restart: always
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - rica-network

  # MinIO
  minio:
    image: minio/minio:RELEASE.2023-07-21T21-12-50Z
    container_name: minio
    restart: always
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: miniokey
    volumes:
      - minio_data:/data
    networks:
      - rica-network

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    container_name: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - rica-network

  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: openbas
      POSTGRES_PASSWORD: openbas
      POSTGRES_DB: openbas
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - rica-network

volumes:
  ollama_data:
  redis_data:
  es_data:
  minio_data:
  rabbitmq_data:
  postgres_data:
  code_data:

networks:
  rica-network:
    driver: bridge
